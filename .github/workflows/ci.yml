# This workflow conducts CI testing across all of VICE's branches.

name: GitHub CI

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.os }} | Python ${{ matrix.python-version }} | openmp = ${{ matrix.openmp }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [gcc-10, clang]
        openmp: [true, false]
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"

        exclude:
          - os: macos-latest
            compiler: gcc-10

          - os: ubuntu-latest
            compiler: clang

    env:
      COMPILER: ${{ matrix.compiler }}

    steps:
        # Extend the environment variables for subsequent steps if necessary
      - name: Setup OpenMP
        if: matrix.openmp
        run: |
          if [[ $OSTYPE == *"darwin"* ]] ; then
            brew install libomp
          fi
          echo "OPENMP=true" >> $GITHUB_ENV

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m pip install Cython>=0.29.21

      - name: Display Environment Variables
        shell: bash
        run: |
          echo "PATH: " $PATH
          echo "COMPILER: " `which $COMPILER`
          echo "COMPILER VERSION: " `$COMPILER --version`
          echo "PYTHON: " `which python`
          echo "PYTHON VERSION: " `python --version`
          echo "MAKE: " `which make`
          echo "MAKE VERSION: " `make --version`

      - name: Compile and Install
        shell: bash
        run: |
          if [[ $OPENMP == "true" ]] ; then
            python setup.py build install openmp -c $COMPILER 2> err.out
          else
            python setup.py build install 2> err.out
          fi
          make clean

      - name: Display Compiler Warnings
        if: always()
        shell: bash
        run: |
          if [ -f "err.out" ] ; then
            cat err.out
            rm -f err.out
          fi

      # After tests, rename the output log if this is ran with openMP
      - name: Tests
        shell: bash
        run: |
          make tests
          if [[ $OPENMP == "true" ]] ; then
            LOGFILE=$(ls ./vice | grep .log)
            mv ./vice/$LOGFILE ./vice/openmp_$LOGFILE
          fi

      # Tests leave behind a test_<platform>_<version>.log file under ./vice
      - name: Upload Test Log
        uses: actions/upload-artifact@v3
        with:
          name: testlogs
          path: ./vice/*.log

      - name: Clean Source Tree
        shell: bash
        run: |
          make clean

